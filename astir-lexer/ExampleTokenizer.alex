// TODO: implement comments in the lexer

nondeterministic finite automaton ExampleTokenizer with individual_string_literals, table_lookup {
	regex digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

	category number {
		flag isNegative;
	};

	token integer : number =
		digit+
		| "-"@flag:isNegative digit+
		;

	token decimal : number {
		integer item exponent;
	} =
		"-"@flag:isNegative? digit+ "." digit+ ("e" integer@set:exponent)?
		;

	regex identifierStartingCharacter = ["a"-"z" "A"-"Z" "_"];
	regex identifierCharacter = identifierStartingCharacter | digit;

	token identifier = identifierStartingCharacter identifierCharacter*;

	token operator =
		"+"
		| "-"
		| "*"
		| "\"
		;
}